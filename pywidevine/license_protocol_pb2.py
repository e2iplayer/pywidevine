# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: license_protocol.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='license_protocol.proto',
  package='pywidevine_license_protocol',
  syntax='proto2',
  serialized_options=b'\n com.rlaphoenix.pywidevine.protosH\003',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x16license_protocol.proto\x12\x1bpywidevine_license_protocol\"\xbd\x01\n\x15LicenseIdentification\x12\x12\n\nrequest_id\x18\x01 \x01(\x0c\x12\x12\n\nsession_id\x18\x02 \x01(\x0c\x12\x13\n\x0bpurchase_id\x18\x03 \x01(\x0c\x12\x36\n\x04type\x18\x04 \x01(\x0e\x32(.pywidevine_license_protocol.LicenseType\x12\x0f\n\x07version\x18\x05 \x01(\x05\x12\x1e\n\x16provider_session_token\x18\x06 \x01(\x0c\"\xf1\x18\n\x07License\x12>\n\x02id\x18\x01 \x01(\x0b\x32\x32.pywidevine_license_protocol.LicenseIdentification\x12;\n\x06policy\x18\x02 \x01(\x0b\x32+.pywidevine_license_protocol.License.Policy\x12>\n\x03key\x18\x03 \x03(\x0b\x32\x31.pywidevine_license_protocol.License.KeyContainer\x12\x1a\n\x12license_start_time\x18\x04 \x01(\x03\x12*\n\x1bremote_attestation_verified\x18\x05 \x01(\x08:\x05\x66\x61lse\x12\x1d\n\x15provider_client_token\x18\x06 \x01(\x0c\x12\x19\n\x11protection_scheme\x18\x07 \x01(\r\x12\x17\n\x0fsrm_requirement\x18\x08 \x01(\x0c\x12\x12\n\nsrm_update\x18\t \x01(\x0c\x12w\n\x1cplatform_verification_status\x18\n \x01(\x0e\x32\x37.pywidevine_license_protocol.PlatformVerificationStatus:\x18PLATFORM_NO_VERIFICATION\x12\x11\n\tgroup_ids\x18\x0b \x03(\x0c\x1a\xae\x04\n\x06Policy\x12\x17\n\x08\x63\x61n_play\x18\x01 \x01(\x08:\x05\x66\x61lse\x12\x1a\n\x0b\x63\x61n_persist\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x18\n\tcan_renew\x18\x03 \x01(\x08:\x05\x66\x61lse\x12\"\n\x17rental_duration_seconds\x18\x04 \x01(\x03:\x01\x30\x12$\n\x19playback_duration_seconds\x18\x05 \x01(\x03:\x01\x30\x12#\n\x18license_duration_seconds\x18\x06 \x01(\x03:\x01\x30\x12,\n!renewal_recovery_duration_seconds\x18\x07 \x01(\x03:\x01\x30\x12\x1a\n\x12renewal_server_url\x18\x08 \x01(\t\x12 \n\x15renewal_delay_seconds\x18\t \x01(\x03:\x01\x30\x12)\n\x1erenewal_retry_interval_seconds\x18\n \x01(\x03:\x01\x30\x12\x1f\n\x10renew_with_usage\x18\x0b \x01(\x08:\x05\x66\x61lse\x12\'\n\x18\x61lways_include_client_id\x18\x0c \x01(\x08:\x05\x66\x61lse\x12*\n\x1fplay_start_grace_period_seconds\x18\r \x01(\x03:\x01\x30\x12-\n\x1esoft_enforce_playback_duration\x18\x0e \x01(\x08:\x05\x66\x61lse\x12*\n\x1csoft_enforce_rental_duration\x18\x0f \x01(\x08:\x04true\x1a\xbc\x10\n\x0cKeyContainer\x12\n\n\x02id\x18\x01 \x01(\x0c\x12\n\n\x02iv\x18\x02 \x01(\x0c\x12\x0b\n\x03key\x18\x03 \x01(\x0c\x12G\n\x04type\x18\x04 \x01(\x0e\x32\x39.pywidevine_license_protocol.License.KeyContainer.KeyType\x12`\n\x05level\x18\x05 \x01(\x0e\x32?.pywidevine_license_protocol.License.KeyContainer.SecurityLevel:\x10SW_SECURE_CRYPTO\x12_\n\x13required_protection\x18\x06 \x01(\x0b\x32\x42.pywidevine_license_protocol.License.KeyContainer.OutputProtection\x12`\n\x14requested_protection\x18\x07 \x01(\x0b\x32\x42.pywidevine_license_protocol.License.KeyContainer.OutputProtection\x12Q\n\x0bkey_control\x18\x08 \x01(\x0b\x32<.pywidevine_license_protocol.License.KeyContainer.KeyControl\x12y\n operator_session_key_permissions\x18\t \x01(\x0b\x32O.pywidevine_license_protocol.License.KeyContainer.OperatorSessionKeyPermissions\x12q\n\x1cvideo_resolution_constraints\x18\n \x03(\x0b\x32K.pywidevine_license_protocol.License.KeyContainer.VideoResolutionConstraint\x12(\n\x19\x61nti_rollback_usage_table\x18\x0b \x01(\x08:\x05\x66\x61lse\x12\x13\n\x0btrack_label\x18\x0c \x01(\t\x1a\x33\n\nKeyControl\x12\x19\n\x11key_control_block\x18\x01 \x01(\x0c\x12\n\n\x02iv\x18\x02 \x01(\x0c\x1a\x9c\x05\n\x10OutputProtection\x12`\n\x04hdcp\x18\x01 \x01(\x0e\x32G.pywidevine_license_protocol.License.KeyContainer.OutputProtection.HDCP:\tHDCP_NONE\x12\x66\n\ncgms_flags\x18\x02 \x01(\x0e\x32G.pywidevine_license_protocol.License.KeyContainer.OutputProtection.CGMS:\tCGMS_NONE\x12y\n\rhdcp_srm_rule\x18\x03 \x01(\x0e\x32N.pywidevine_license_protocol.License.KeyContainer.OutputProtection.HdcpSrmRule:\x12HDCP_SRM_RULE_NONE\x12$\n\x15\x64isable_analog_output\x18\x04 \x01(\x08:\x05\x66\x61lse\x12%\n\x16\x64isable_digital_output\x18\x05 \x01(\x08:\x05\x66\x61lse\"y\n\x04HDCP\x12\r\n\tHDCP_NONE\x10\x00\x12\x0b\n\x07HDCP_V1\x10\x01\x12\x0b\n\x07HDCP_V2\x10\x02\x12\r\n\tHDCP_V2_1\x10\x03\x12\r\n\tHDCP_V2_2\x10\x04\x12\r\n\tHDCP_V2_3\x10\x05\x12\x1b\n\x16HDCP_NO_DIGITAL_OUTPUT\x10\xff\x01\"C\n\x04\x43GMS\x12\r\n\tCGMS_NONE\x10*\x12\r\n\tCOPY_FREE\x10\x00\x12\r\n\tCOPY_ONCE\x10\x02\x12\x0e\n\nCOPY_NEVER\x10\x03\"6\n\x0bHdcpSrmRule\x12\x16\n\x12HDCP_SRM_RULE_NONE\x10\x00\x12\x0f\n\x0b\x43URRENT_SRM\x10\x01\x1a\xba\x01\n\x19VideoResolutionConstraint\x12\x1d\n\x15min_resolution_pixels\x18\x01 \x01(\r\x12\x1d\n\x15max_resolution_pixels\x18\x02 \x01(\r\x12_\n\x13required_protection\x18\x03 \x01(\x0b\x32\x42.pywidevine_license_protocol.License.KeyContainer.OutputProtection\x1a\x9d\x01\n\x1dOperatorSessionKeyPermissions\x12\x1c\n\rallow_encrypt\x18\x01 \x01(\x08:\x05\x66\x61lse\x12\x1c\n\rallow_decrypt\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x19\n\nallow_sign\x18\x03 \x01(\x08:\x05\x66\x61lse\x12%\n\x16\x61llow_signature_verify\x18\x04 \x01(\x08:\x05\x66\x61lse\"l\n\x07KeyType\x12\x0b\n\x07SIGNING\x10\x01\x12\x0b\n\x07\x43ONTENT\x10\x02\x12\x0f\n\x0bKEY_CONTROL\x10\x03\x12\x14\n\x10OPERATOR_SESSION\x10\x04\x12\x0f\n\x0b\x45NTITLEMENT\x10\x05\x12\x0f\n\x0bOEM_CONTENT\x10\x06\"z\n\rSecurityLevel\x12\x14\n\x10SW_SECURE_CRYPTO\x10\x01\x12\x14\n\x10SW_SECURE_DECODE\x10\x02\x12\x14\n\x10HW_SECURE_CRYPTO\x10\x03\x12\x14\n\x10HW_SECURE_DECODE\x10\x04\x12\x11\n\rHW_SECURE_ALL\x10\x05\"\xbd\r\n\x0eLicenseRequest\x12\x44\n\tclient_id\x18\x01 \x01(\x0b\x32\x31.pywidevine_license_protocol.ClientIdentification\x12U\n\ncontent_id\x18\x02 \x01(\x0b\x32\x41.pywidevine_license_protocol.LicenseRequest.ContentIdentification\x12\x45\n\x04type\x18\x03 \x01(\x0e\x32\x37.pywidevine_license_protocol.LicenseRequest.RequestType\x12\x14\n\x0crequest_time\x18\x04 \x01(\x03\x12$\n\x1ckey_control_nonce_deprecated\x18\x05 \x01(\x0c\x12S\n\x10protocol_version\x18\x06 \x01(\x0e\x32,.pywidevine_license_protocol.ProtocolVersion:\x0bVERSION_2_0\x12\x19\n\x11key_control_nonce\x18\x07 \x01(\r\x12W\n\x13\x65ncrypted_client_id\x18\x08 \x01(\x0b\x32:.pywidevine_license_protocol.EncryptedClientIdentification\x1a\x8f\t\n\x15\x43ontentIdentification\x12p\n\x12widevine_pssh_data\x18\x01 \x01(\x0b\x32R.pywidevine_license_protocol.LicenseRequest.ContentIdentification.WidevinePsshDataH\x00\x12\x62\n\x0bwebm_key_id\x18\x02 \x01(\x0b\x32K.pywidevine_license_protocol.LicenseRequest.ContentIdentification.WebmKeyIdH\x00\x12m\n\x10\x65xisting_license\x18\x03 \x01(\x0b\x32Q.pywidevine_license_protocol.LicenseRequest.ContentIdentification.ExistingLicenseH\x00\x12_\n\tinit_data\x18\x04 \x01(\x0b\x32J.pywidevine_license_protocol.LicenseRequest.ContentIdentification.InitDataH\x00\x1ay\n\x10WidevinePsshData\x12\x11\n\tpssh_data\x18\x01 \x03(\x0c\x12>\n\x0clicense_type\x18\x02 \x01(\x0e\x32(.pywidevine_license_protocol.LicenseType\x12\x12\n\nrequest_id\x18\x03 \x01(\x0c\x1ao\n\tWebmKeyId\x12\x0e\n\x06header\x18\x01 \x01(\x0c\x12>\n\x0clicense_type\x18\x02 \x01(\x0e\x32(.pywidevine_license_protocol.LicenseType\x12\x12\n\nrequest_id\x18\x03 \x01(\x0c\x1a\xbe\x01\n\x0f\x45xistingLicense\x12\x46\n\nlicense_id\x18\x01 \x01(\x0b\x32\x32.pywidevine_license_protocol.LicenseIdentification\x12\x1d\n\x15seconds_since_started\x18\x02 \x01(\x03\x12!\n\x19seconds_since_last_played\x18\x03 \x01(\x03\x12!\n\x19session_usage_table_entry\x18\x04 \x01(\x0c\x1a\x8c\x02\n\x08InitData\x12u\n\x0einit_data_type\x18\x01 \x01(\x0e\x32W.pywidevine_license_protocol.LicenseRequest.ContentIdentification.InitData.InitDataType:\x04\x43\x45NC\x12\x11\n\tinit_data\x18\x02 \x01(\x0c\x12>\n\x0clicense_type\x18\x03 \x01(\x0e\x32(.pywidevine_license_protocol.LicenseType\x12\x12\n\nrequest_id\x18\x04 \x01(\x0c\"\"\n\x0cInitDataType\x12\x08\n\x04\x43\x45NC\x10\x01\x12\x08\n\x04WEBM\x10\x02\x42\x14\n\x12\x63ontent_id_variant\"0\n\x0bRequestType\x12\x07\n\x03NEW\x10\x01\x12\x0b\n\x07RENEWAL\x10\x02\x12\x0b\n\x07RELEASE\x10\x03\"\xf3\x01\n\nMetricData\x12\x12\n\nstage_name\x18\x01 \x01(\t\x12\x46\n\x0bmetric_data\x18\x02 \x03(\x0b\x32\x31.pywidevine_license_protocol.MetricData.TypeValue\x1a_\n\tTypeValue\x12@\n\x04type\x18\x01 \x01(\x0e\x32\x32.pywidevine_license_protocol.MetricData.MetricType\x12\x10\n\x05value\x18\x02 \x01(\x03:\x01\x30\"(\n\nMetricType\x12\x0b\n\x07LATENCY\x10\x01\x12\r\n\tTIMESTAMP\x10\x02\"K\n\x0bVersionInfo\x12\x1b\n\x13license_sdk_version\x18\x01 \x01(\t\x12\x1f\n\x17license_service_version\x18\x02 \x01(\t\"\xf6\x05\n\rSignedMessage\x12\x44\n\x04type\x18\x01 \x01(\x0e\x32\x36.pywidevine_license_protocol.SignedMessage.MessageType\x12\x0b\n\x03msg\x18\x02 \x01(\x0c\x12\x11\n\tsignature\x18\x03 \x01(\x0c\x12\x13\n\x0bsession_key\x18\x04 \x01(\x0c\x12\x1a\n\x12remote_attestation\x18\x05 \x01(\x0c\x12<\n\x0bmetric_data\x18\x06 \x03(\x0b\x32\'.pywidevine_license_protocol.MetricData\x12\x46\n\x14service_version_info\x18\x07 \x01(\x0b\x32(.pywidevine_license_protocol.VersionInfo\x12\x64\n\x10session_key_type\x18\x08 \x01(\x0e\x32\x39.pywidevine_license_protocol.SignedMessage.SessionKeyType:\x0fWRAPPED_AES_KEY\x12\x1e\n\x16oemcrypto_core_message\x18\t \x01(\x0c\"\xec\x01\n\x0bMessageType\x12\x13\n\x0fLICENSE_REQUEST\x10\x01\x12\x0b\n\x07LICENSE\x10\x02\x12\x12\n\x0e\x45RROR_RESPONSE\x10\x03\x12\x1f\n\x1bSERVICE_CERTIFICATE_REQUEST\x10\x04\x12\x17\n\x13SERVICE_CERTIFICATE\x10\x05\x12\x0f\n\x0bSUB_LICENSE\x10\x06\x12\x17\n\x13\x43\x41S_LICENSE_REQUEST\x10\x07\x12\x0f\n\x0b\x43\x41S_LICENSE\x10\x08\x12\x1c\n\x18\x45XTERNAL_LICENSE_REQUEST\x10\t\x12\x14\n\x10\x45XTERNAL_LICENSE\x10\n\"S\n\x0eSessionKeyType\x12\r\n\tUNDEFINED\x10\x00\x12\x13\n\x0fWRAPPED_AES_KEY\x10\x01\x12\x1d\n\x19\x45PHERMERAL_ECC_PUBLIC_KEY\x10\x02\"\xc7\x0e\n\x14\x43lientIdentification\x12Q\n\x04type\x18\x01 \x01(\x0e\x32;.pywidevine_license_protocol.ClientIdentification.TokenType:\x06KEYBOX\x12\r\n\x05token\x18\x02 \x01(\x0c\x12P\n\x0b\x63lient_info\x18\x03 \x03(\x0b\x32;.pywidevine_license_protocol.ClientIdentification.NameValue\x12\x1d\n\x15provider_client_token\x18\x04 \x01(\x0c\x12\x17\n\x0flicense_counter\x18\x05 \x01(\r\x12\x61\n\x13\x63lient_capabilities\x18\x06 \x01(\x0b\x32\x44.pywidevine_license_protocol.ClientIdentification.ClientCapabilities\x12\x10\n\x08vmp_data\x18\x07 \x01(\x0c\x12_\n\x12\x64\x65vice_credentials\x18\x08 \x03(\x0b\x32\x43.pywidevine_license_protocol.ClientIdentification.ClientCredentials\x1a(\n\tNameValue\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x1a\xd6\x08\n\x12\x43lientCapabilities\x12\x1b\n\x0c\x63lient_token\x18\x01 \x01(\x08:\x05\x66\x61lse\x12\x1c\n\rsession_token\x18\x02 \x01(\x08:\x05\x66\x61lse\x12+\n\x1cvideo_resolution_constraints\x18\x03 \x01(\x08:\x05\x66\x61lse\x12u\n\x10max_hdcp_version\x18\x04 \x01(\x0e\x32P.pywidevine_license_protocol.ClientIdentification.ClientCapabilities.HdcpVersion:\tHDCP_NONE\x12\x1e\n\x16oem_crypto_api_version\x18\x05 \x01(\r\x12(\n\x19\x61nti_rollback_usage_table\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x13\n\x0bsrm_version\x18\x07 \x01(\r\x12\x1d\n\x0e\x63\x61n_update_srm\x18\x08 \x01(\x08:\x05\x66\x61lse\x12\x7f\n\x1esupported_certificate_key_type\x18\t \x03(\x0e\x32W.pywidevine_license_protocol.ClientIdentification.ClientCapabilities.CertificateKeyType\x12\x98\x01\n\x1a\x61nalog_output_capabilities\x18\n \x01(\x0e\x32].pywidevine_license_protocol.ClientIdentification.ClientCapabilities.AnalogOutputCapabilities:\x15\x41NALOG_OUTPUT_UNKNOWN\x12(\n\x19\x63\x61n_disable_analog_output\x18\x0b \x01(\x08:\x05\x66\x61lse\x12\x1f\n\x14resource_rating_tier\x18\x0c \x01(\r:\x01\x30\"\x80\x01\n\x0bHdcpVersion\x12\r\n\tHDCP_NONE\x10\x00\x12\x0b\n\x07HDCP_V1\x10\x01\x12\x0b\n\x07HDCP_V2\x10\x02\x12\r\n\tHDCP_V2_1\x10\x03\x12\r\n\tHDCP_V2_2\x10\x04\x12\r\n\tHDCP_V2_3\x10\x05\x12\x1b\n\x16HDCP_NO_DIGITAL_OUTPUT\x10\xff\x01\"i\n\x12\x43\x65rtificateKeyType\x12\x0c\n\x08RSA_2048\x10\x00\x12\x0c\n\x08RSA_3072\x10\x01\x12\x11\n\rECC_SECP256R1\x10\x02\x12\x11\n\rECC_SECP384R1\x10\x03\x12\x11\n\rECC_SECP521R1\x10\x04\"\x8d\x01\n\x18\x41nalogOutputCapabilities\x12\x19\n\x15\x41NALOG_OUTPUT_UNKNOWN\x10\x00\x12\x16\n\x12\x41NALOG_OUTPUT_NONE\x10\x01\x12\x1b\n\x17\x41NALOG_OUTPUT_SUPPORTED\x10\x02\x12!\n\x1d\x41NALOG_OUTPUT_SUPPORTS_CGMS_A\x10\x03\x1au\n\x11\x43lientCredentials\x12Q\n\x04type\x18\x01 \x01(\x0e\x32;.pywidevine_license_protocol.ClientIdentification.TokenType:\x06KEYBOX\x12\r\n\x05token\x18\x02 \x01(\x0c\"s\n\tTokenType\x12\n\n\x06KEYBOX\x10\x00\x12\x1a\n\x16\x44RM_DEVICE_CERTIFICATE\x10\x01\x12\"\n\x1eREMOTE_ATTESTATION_CERTIFICATE\x10\x02\x12\x1a\n\x16OEM_DEVICE_CERTIFICATE\x10\x03\"\xbb\x01\n\x1d\x45ncryptedClientIdentification\x12\x13\n\x0bprovider_id\x18\x01 \x01(\t\x12)\n!service_certificate_serial_number\x18\x02 \x01(\x0c\x12\x1b\n\x13\x65ncrypted_client_id\x18\x03 \x01(\x0c\x12\x1e\n\x16\x65ncrypted_client_id_iv\x18\x04 \x01(\x0c\x12\x1d\n\x15\x65ncrypted_privacy_key\x18\x05 \x01(\x0c\"\xba\x07\n\x0e\x44rmCertificate\x12>\n\x04type\x18\x01 \x01(\x0e\x32\x30.pywidevine_license_protocol.DrmCertificate.Type\x12\x15\n\rserial_number\x18\x02 \x01(\x0c\x12\x1d\n\x15\x63reation_time_seconds\x18\x03 \x01(\r\x12\x1f\n\x17\x65xpiration_time_seconds\x18\x0c \x01(\r\x12\x12\n\npublic_key\x18\x04 \x01(\x0c\x12\x11\n\tsystem_id\x18\x05 \x01(\r\x12\"\n\x16test_device_deprecated\x18\x06 \x01(\x08\x42\x02\x18\x01\x12\x13\n\x0bprovider_id\x18\x07 \x01(\t\x12N\n\rservice_types\x18\x08 \x03(\x0e\x32\x37.pywidevine_license_protocol.DrmCertificate.ServiceType\x12M\n\talgorithm\x18\t \x01(\x0e\x32\x35.pywidevine_license_protocol.DrmCertificate.Algorithm:\x03RSA\x12\x0e\n\x06rot_id\x18\n \x01(\x0c\x12Q\n\x0e\x65ncryption_key\x18\x0b \x01(\x0b\x32\x39.pywidevine_license_protocol.DrmCertificate.EncryptionKey\x1ar\n\rEncryptionKey\x12\x12\n\npublic_key\x18\x01 \x01(\x0c\x12M\n\talgorithm\x18\x02 \x01(\x0e\x32\x35.pywidevine_license_protocol.DrmCertificate.Algorithm:\x03RSA\"L\n\x04Type\x12\x08\n\x04ROOT\x10\x00\x12\x10\n\x0c\x44\x45VICE_MODEL\x10\x01\x12\n\n\x06\x44\x45VICE\x10\x02\x12\x0b\n\x07SERVICE\x10\x03\x12\x0f\n\x0bPROVISIONER\x10\x04\"\x86\x01\n\x0bServiceType\x12\x18\n\x14UNKNOWN_SERVICE_TYPE\x10\x00\x12\x16\n\x12LICENSE_SERVER_SDK\x10\x01\x12\x1c\n\x18LICENSE_SERVER_PROXY_SDK\x10\x02\x12\x14\n\x10PROVISIONING_SDK\x10\x03\x12\x11\n\rCAS_PROXY_SDK\x10\x04\"d\n\tAlgorithm\x12\x15\n\x11UNKNOWN_ALGORITHM\x10\x00\x12\x07\n\x03RSA\x10\x01\x12\x11\n\rECC_SECP256R1\x10\x02\x12\x11\n\rECC_SECP384R1\x10\x03\x12\x11\n\rECC_SECP521R1\x10\x04\"\xce\x01\n\x14SignedDrmCertificate\x12\x17\n\x0f\x64rm_certificate\x18\x01 \x01(\x0c\x12\x11\n\tsignature\x18\x02 \x01(\x0c\x12\x41\n\x06signer\x18\x03 \x01(\x0b\x32\x31.pywidevine_license_protocol.SignedDrmCertificate\x12G\n\x0ehash_algorithm\x18\x04 \x01(\x0e\x32/.pywidevine_license_protocol.HashAlgorithmProto\"\xf6\x05\n\x10WidevinePsshData\x12\x0f\n\x07key_ids\x18\x02 \x03(\x0c\x12\x12\n\ncontent_id\x18\x04 \x01(\x0c\x12\x1b\n\x13\x63rypto_period_index\x18\x07 \x01(\r\x12\x19\n\x11protection_scheme\x18\t \x01(\r\x12\x1d\n\x15\x63rypto_period_seconds\x18\n \x01(\r\x12H\n\x04type\x18\x0b \x01(\x0e\x32\x32.pywidevine_license_protocol.WidevinePsshData.Type:\x06SINGLE\x12\x14\n\x0ckey_sequence\x18\x0c \x01(\r\x12\x11\n\tgroup_ids\x18\r \x03(\x0c\x12P\n\rentitled_keys\x18\x0e \x03(\x0b\x32\x39.pywidevine_license_protocol.WidevinePsshData.EntitledKey\x12\x15\n\rvideo_feature\x18\x0f \x01(\t\x12N\n\talgorithm\x18\x01 \x01(\x0e\x32\x37.pywidevine_license_protocol.WidevinePsshData.AlgorithmB\x02\x18\x01\x12\x14\n\x08provider\x18\x03 \x01(\tB\x02\x18\x01\x12\x16\n\ntrack_type\x18\x05 \x01(\tB\x02\x18\x01\x12\x12\n\x06policy\x18\x06 \x01(\tB\x02\x18\x01\x12\x1b\n\x0fgrouped_license\x18\x08 \x01(\x0c\x42\x02\x18\x01\x1az\n\x0b\x45ntitledKey\x12\x1a\n\x12\x65ntitlement_key_id\x18\x01 \x01(\x0c\x12\x0e\n\x06key_id\x18\x02 \x01(\x0c\x12\x0b\n\x03key\x18\x03 \x01(\x0c\x12\n\n\x02iv\x18\x04 \x01(\x0c\x12&\n\x1a\x65ntitlement_key_size_bytes\x18\x05 \x01(\r:\x02\x33\x32\"5\n\x04Type\x12\n\n\x06SINGLE\x10\x00\x12\x0f\n\x0b\x45NTITLEMENT\x10\x01\x12\x10\n\x0c\x45NTITLED_KEY\x10\x02\"(\n\tAlgorithm\x12\x0f\n\x0bUNENCRYPTED\x10\x00\x12\n\n\x06\x41\x45SCTR\x10\x01\"\xd1\x01\n\nFileHashes\x12\x0e\n\x06signer\x18\x01 \x01(\x0c\x12\x45\n\nsignatures\x18\x02 \x03(\x0b\x32\x31.pywidevine_license_protocol.FileHashes.Signature\x1al\n\tSignature\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12\x14\n\x0ctest_signing\x18\x02 \x01(\x08\x12\x12\n\nSHA512Hash\x18\x03 \x01(\x0c\x12\x10\n\x08main_exe\x18\x04 \x01(\x08\x12\x11\n\tsignature\x18\x05 \x01(\x0c*8\n\x0bLicenseType\x12\r\n\tSTREAMING\x10\x01\x12\x0b\n\x07OFFLINE\x10\x02\x12\r\n\tAUTOMATIC\x10\x03*\xd9\x01\n\x1aPlatformVerificationStatus\x12\x17\n\x13PLATFORM_UNVERIFIED\x10\x00\x12\x15\n\x11PLATFORM_TAMPERED\x10\x01\x12\x1e\n\x1aPLATFORM_SOFTWARE_VERIFIED\x10\x02\x12\x1e\n\x1aPLATFORM_HARDWARE_VERIFIED\x10\x03\x12\x1c\n\x18PLATFORM_NO_VERIFICATION\x10\x04\x12-\n)PLATFORM_SECURE_STORAGE_SOFTWARE_VERIFIED\x10\x05*D\n\x0fProtocolVersion\x12\x0f\n\x0bVERSION_2_0\x10\x14\x12\x0f\n\x0bVERSION_2_1\x10\x15\x12\x0f\n\x0bVERSION_2_2\x10\x16*\x86\x01\n\x12HashAlgorithmProto\x12\x1e\n\x1aHASH_ALGORITHM_UNSPECIFIED\x10\x00\x12\x18\n\x14HASH_ALGORITHM_SHA_1\x10\x01\x12\x1a\n\x16HASH_ALGORITHM_SHA_256\x10\x02\x12\x1a\n\x16HASH_ALGORITHM_SHA_384\x10\x03\x42$\n com.rlaphoenix.pywidevine.protosH\x03'
)

_LICENSETYPE = _descriptor.EnumDescriptor(
  name='LicenseType',
  full_name='pywidevine_license_protocol.LicenseType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STREAMING', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OFFLINE', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AUTOMATIC', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=10442,
  serialized_end=10498,
)
_sym_db.RegisterEnumDescriptor(_LICENSETYPE)

LicenseType = enum_type_wrapper.EnumTypeWrapper(_LICENSETYPE)
_PLATFORMVERIFICATIONSTATUS = _descriptor.EnumDescriptor(
  name='PlatformVerificationStatus',
  full_name='pywidevine_license_protocol.PlatformVerificationStatus',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PLATFORM_UNVERIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PLATFORM_TAMPERED', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PLATFORM_SOFTWARE_VERIFIED', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PLATFORM_HARDWARE_VERIFIED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PLATFORM_NO_VERIFICATION', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PLATFORM_SECURE_STORAGE_SOFTWARE_VERIFIED', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=10501,
  serialized_end=10718,
)
_sym_db.RegisterEnumDescriptor(_PLATFORMVERIFICATIONSTATUS)

PlatformVerificationStatus = enum_type_wrapper.EnumTypeWrapper(_PLATFORMVERIFICATIONSTATUS)
_PROTOCOLVERSION = _descriptor.EnumDescriptor(
  name='ProtocolVersion',
  full_name='pywidevine_license_protocol.ProtocolVersion',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VERSION_2_0', index=0, number=20,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='VERSION_2_1', index=1, number=21,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='VERSION_2_2', index=2, number=22,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=10720,
  serialized_end=10788,
)
_sym_db.RegisterEnumDescriptor(_PROTOCOLVERSION)

ProtocolVersion = enum_type_wrapper.EnumTypeWrapper(_PROTOCOLVERSION)
_HASHALGORITHMPROTO = _descriptor.EnumDescriptor(
  name='HashAlgorithmProto',
  full_name='pywidevine_license_protocol.HashAlgorithmProto',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HASH_ALGORITHM_UNSPECIFIED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HASH_ALGORITHM_SHA_1', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HASH_ALGORITHM_SHA_256', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HASH_ALGORITHM_SHA_384', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=10791,
  serialized_end=10925,
)
_sym_db.RegisterEnumDescriptor(_HASHALGORITHMPROTO)

HashAlgorithmProto = enum_type_wrapper.EnumTypeWrapper(_HASHALGORITHMPROTO)
STREAMING = 1
OFFLINE = 2
AUTOMATIC = 3
PLATFORM_UNVERIFIED = 0
PLATFORM_TAMPERED = 1
PLATFORM_SOFTWARE_VERIFIED = 2
PLATFORM_HARDWARE_VERIFIED = 3
PLATFORM_NO_VERIFICATION = 4
PLATFORM_SECURE_STORAGE_SOFTWARE_VERIFIED = 5
VERSION_2_0 = 20
VERSION_2_1 = 21
VERSION_2_2 = 22
HASH_ALGORITHM_UNSPECIFIED = 0
HASH_ALGORITHM_SHA_1 = 1
HASH_ALGORITHM_SHA_256 = 2
HASH_ALGORITHM_SHA_384 = 3


_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_HDCP = _descriptor.EnumDescriptor(
  name='HDCP',
  full_name='pywidevine_license_protocol.License.KeyContainer.OutputProtection.HDCP',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HDCP_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_V1', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_V2', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_V2_1', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_V2_2', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_V2_3', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_NO_DIGITAL_OUTPUT', index=6, number=255,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2604,
  serialized_end=2725,
)
_sym_db.RegisterEnumDescriptor(_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_HDCP)

_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS = _descriptor.EnumDescriptor(
  name='CGMS',
  full_name='pywidevine_license_protocol.License.KeyContainer.OutputProtection.CGMS',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CGMS_NONE', index=0, number=42,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COPY_FREE', index=1, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COPY_ONCE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='COPY_NEVER', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2727,
  serialized_end=2794,
)
_sym_db.RegisterEnumDescriptor(_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS)

_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_HDCPSRMRULE = _descriptor.EnumDescriptor(
  name='HdcpSrmRule',
  full_name='pywidevine_license_protocol.License.KeyContainer.OutputProtection.HdcpSrmRule',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HDCP_SRM_RULE_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CURRENT_SRM', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2796,
  serialized_end=2850,
)
_sym_db.RegisterEnumDescriptor(_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_HDCPSRMRULE)

_LICENSE_KEYCONTAINER_KEYTYPE = _descriptor.EnumDescriptor(
  name='KeyType',
  full_name='pywidevine_license_protocol.License.KeyContainer.KeyType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SIGNING', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CONTENT', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='KEY_CONTROL', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OPERATOR_SESSION', index=3, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ENTITLEMENT', index=4, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OEM_CONTENT', index=5, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3201,
  serialized_end=3309,
)
_sym_db.RegisterEnumDescriptor(_LICENSE_KEYCONTAINER_KEYTYPE)

_LICENSE_KEYCONTAINER_SECURITYLEVEL = _descriptor.EnumDescriptor(
  name='SecurityLevel',
  full_name='pywidevine_license_protocol.License.KeyContainer.SecurityLevel',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SW_SECURE_CRYPTO', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SW_SECURE_DECODE', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HW_SECURE_CRYPTO', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HW_SECURE_DECODE', index=3, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HW_SECURE_ALL', index=4, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=3311,
  serialized_end=3433,
)
_sym_db.RegisterEnumDescriptor(_LICENSE_KEYCONTAINER_SECURITYLEVEL)

_LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA_INITDATATYPE = _descriptor.EnumDescriptor(
  name='InitDataType',
  full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.InitData.InitDataType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CENC', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WEBM', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=5055,
  serialized_end=5089,
)
_sym_db.RegisterEnumDescriptor(_LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA_INITDATATYPE)

_LICENSEREQUEST_REQUESTTYPE = _descriptor.EnumDescriptor(
  name='RequestType',
  full_name='pywidevine_license_protocol.LicenseRequest.RequestType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NEW', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RENEWAL', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RELEASE', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=5113,
  serialized_end=5161,
)
_sym_db.RegisterEnumDescriptor(_LICENSEREQUEST_REQUESTTYPE)

_METRICDATA_METRICTYPE = _descriptor.EnumDescriptor(
  name='MetricType',
  full_name='pywidevine_license_protocol.MetricData.MetricType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LATENCY', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='TIMESTAMP', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=5367,
  serialized_end=5407,
)
_sym_db.RegisterEnumDescriptor(_METRICDATA_METRICTYPE)

_SIGNEDMESSAGE_MESSAGETYPE = _descriptor.EnumDescriptor(
  name='MessageType',
  full_name='pywidevine_license_protocol.SignedMessage.MessageType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LICENSE_REQUEST', index=0, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LICENSE', index=1, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ERROR_RESPONSE', index=2, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_CERTIFICATE_REQUEST', index=3, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SERVICE_CERTIFICATE', index=4, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SUB_LICENSE', index=5, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CAS_LICENSE_REQUEST', index=6, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CAS_LICENSE', index=7, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='EXTERNAL_LICENSE_REQUEST', index=8, number=9,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='EXTERNAL_LICENSE', index=9, number=10,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=5924,
  serialized_end=6160,
)
_sym_db.RegisterEnumDescriptor(_SIGNEDMESSAGE_MESSAGETYPE)

_SIGNEDMESSAGE_SESSIONKEYTYPE = _descriptor.EnumDescriptor(
  name='SessionKeyType',
  full_name='pywidevine_license_protocol.SignedMessage.SessionKeyType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WRAPPED_AES_KEY', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='EPHERMERAL_ECC_PUBLIC_KEY', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=6162,
  serialized_end=6245,
)
_sym_db.RegisterEnumDescriptor(_SIGNEDMESSAGE_SESSIONKEYTYPE)

_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION = _descriptor.EnumDescriptor(
  name='HdcpVersion',
  full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.HdcpVersion',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='HDCP_NONE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_V1', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_V2', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_V2_1', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_V2_2', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_V2_3', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='HDCP_NO_DIGITAL_OUTPUT', index=6, number=255,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=7496,
  serialized_end=7624,
)
_sym_db.RegisterEnumDescriptor(_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION)

_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_CERTIFICATEKEYTYPE = _descriptor.EnumDescriptor(
  name='CertificateKeyType',
  full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.CertificateKeyType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='RSA_2048', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RSA_3072', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ECC_SECP256R1', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ECC_SECP384R1', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ECC_SECP521R1', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=7626,
  serialized_end=7731,
)
_sym_db.RegisterEnumDescriptor(_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_CERTIFICATEKEYTYPE)

_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_ANALOGOUTPUTCAPABILITIES = _descriptor.EnumDescriptor(
  name='AnalogOutputCapabilities',
  full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.AnalogOutputCapabilities',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ANALOG_OUTPUT_UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ANALOG_OUTPUT_NONE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ANALOG_OUTPUT_SUPPORTED', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ANALOG_OUTPUT_SUPPORTS_CGMS_A', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=7734,
  serialized_end=7875,
)
_sym_db.RegisterEnumDescriptor(_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_ANALOGOUTPUTCAPABILITIES)

_CLIENTIDENTIFICATION_TOKENTYPE = _descriptor.EnumDescriptor(
  name='TokenType',
  full_name='pywidevine_license_protocol.ClientIdentification.TokenType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='KEYBOX', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DRM_DEVICE_CERTIFICATE', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='REMOTE_ATTESTATION_CERTIFICATE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OEM_DEVICE_CERTIFICATE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=7996,
  serialized_end=8111,
)
_sym_db.RegisterEnumDescriptor(_CLIENTIDENTIFICATION_TOKENTYPE)

_DRMCERTIFICATE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='pywidevine_license_protocol.DrmCertificate.Type',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ROOT', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DEVICE_MODEL', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DEVICE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SERVICE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PROVISIONER', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=8943,
  serialized_end=9019,
)
_sym_db.RegisterEnumDescriptor(_DRMCERTIFICATE_TYPE)

_DRMCERTIFICATE_SERVICETYPE = _descriptor.EnumDescriptor(
  name='ServiceType',
  full_name='pywidevine_license_protocol.DrmCertificate.ServiceType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_SERVICE_TYPE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LICENSE_SERVER_SDK', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LICENSE_SERVER_PROXY_SDK', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PROVISIONING_SDK', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='CAS_PROXY_SDK', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=9022,
  serialized_end=9156,
)
_sym_db.RegisterEnumDescriptor(_DRMCERTIFICATE_SERVICETYPE)

_DRMCERTIFICATE_ALGORITHM = _descriptor.EnumDescriptor(
  name='Algorithm',
  full_name='pywidevine_license_protocol.DrmCertificate.Algorithm',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_ALGORITHM', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RSA', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ECC_SECP256R1', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ECC_SECP384R1', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ECC_SECP521R1', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=9158,
  serialized_end=9258,
)
_sym_db.RegisterEnumDescriptor(_DRMCERTIFICATE_ALGORITHM)

_WIDEVINEPSSHDATA_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='pywidevine_license_protocol.WidevinePsshData.Type',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SINGLE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ENTITLEMENT', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ENTITLED_KEY', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=10133,
  serialized_end=10186,
)
_sym_db.RegisterEnumDescriptor(_WIDEVINEPSSHDATA_TYPE)

_WIDEVINEPSSHDATA_ALGORITHM = _descriptor.EnumDescriptor(
  name='Algorithm',
  full_name='pywidevine_license_protocol.WidevinePsshData.Algorithm',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNENCRYPTED', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='AESCTR', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=10188,
  serialized_end=10228,
)
_sym_db.RegisterEnumDescriptor(_WIDEVINEPSSHDATA_ALGORITHM)


_LICENSEIDENTIFICATION = _descriptor.Descriptor(
  name='LicenseIdentification',
  full_name='pywidevine_license_protocol.LicenseIdentification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='request_id', full_name='pywidevine_license_protocol.LicenseIdentification.request_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='session_id', full_name='pywidevine_license_protocol.LicenseIdentification.session_id', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='purchase_id', full_name='pywidevine_license_protocol.LicenseIdentification.purchase_id', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='pywidevine_license_protocol.LicenseIdentification.type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='version', full_name='pywidevine_license_protocol.LicenseIdentification.version', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='provider_session_token', full_name='pywidevine_license_protocol.LicenseIdentification.provider_session_token', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=56,
  serialized_end=245,
)


_LICENSE_POLICY = _descriptor.Descriptor(
  name='Policy',
  full_name='pywidevine_license_protocol.License.Policy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_play', full_name='pywidevine_license_protocol.License.Policy.can_play', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='can_persist', full_name='pywidevine_license_protocol.License.Policy.can_persist', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='can_renew', full_name='pywidevine_license_protocol.License.Policy.can_renew', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rental_duration_seconds', full_name='pywidevine_license_protocol.License.Policy.rental_duration_seconds', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='playback_duration_seconds', full_name='pywidevine_license_protocol.License.Policy.playback_duration_seconds', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='license_duration_seconds', full_name='pywidevine_license_protocol.License.Policy.license_duration_seconds', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='renewal_recovery_duration_seconds', full_name='pywidevine_license_protocol.License.Policy.renewal_recovery_duration_seconds', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='renewal_server_url', full_name='pywidevine_license_protocol.License.Policy.renewal_server_url', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='renewal_delay_seconds', full_name='pywidevine_license_protocol.License.Policy.renewal_delay_seconds', index=8,
      number=9, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='renewal_retry_interval_seconds', full_name='pywidevine_license_protocol.License.Policy.renewal_retry_interval_seconds', index=9,
      number=10, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='renew_with_usage', full_name='pywidevine_license_protocol.License.Policy.renew_with_usage', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='always_include_client_id', full_name='pywidevine_license_protocol.License.Policy.always_include_client_id', index=11,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='play_start_grace_period_seconds', full_name='pywidevine_license_protocol.License.Policy.play_start_grace_period_seconds', index=12,
      number=13, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='soft_enforce_playback_duration', full_name='pywidevine_license_protocol.License.Policy.soft_enforce_playback_duration', index=13,
      number=14, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='soft_enforce_rental_duration', full_name='pywidevine_license_protocol.License.Policy.soft_enforce_rental_duration', index=14,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=764,
  serialized_end=1322,
)

_LICENSE_KEYCONTAINER_KEYCONTROL = _descriptor.Descriptor(
  name='KeyControl',
  full_name='pywidevine_license_protocol.License.KeyContainer.KeyControl',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key_control_block', full_name='pywidevine_license_protocol.License.KeyContainer.KeyControl.key_control_block', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='iv', full_name='pywidevine_license_protocol.License.KeyContainer.KeyControl.iv', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2128,
  serialized_end=2179,
)

_LICENSE_KEYCONTAINER_OUTPUTPROTECTION = _descriptor.Descriptor(
  name='OutputProtection',
  full_name='pywidevine_license_protocol.License.KeyContainer.OutputProtection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='hdcp', full_name='pywidevine_license_protocol.License.KeyContainer.OutputProtection.hdcp', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cgms_flags', full_name='pywidevine_license_protocol.License.KeyContainer.OutputProtection.cgms_flags', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=42,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hdcp_srm_rule', full_name='pywidevine_license_protocol.License.KeyContainer.OutputProtection.hdcp_srm_rule', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='disable_analog_output', full_name='pywidevine_license_protocol.License.KeyContainer.OutputProtection.disable_analog_output', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='disable_digital_output', full_name='pywidevine_license_protocol.License.KeyContainer.OutputProtection.disable_digital_output', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_HDCP,
    _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS,
    _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_HDCPSRMRULE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2182,
  serialized_end=2850,
)

_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT = _descriptor.Descriptor(
  name='VideoResolutionConstraint',
  full_name='pywidevine_license_protocol.License.KeyContainer.VideoResolutionConstraint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='min_resolution_pixels', full_name='pywidevine_license_protocol.License.KeyContainer.VideoResolutionConstraint.min_resolution_pixels', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_resolution_pixels', full_name='pywidevine_license_protocol.License.KeyContainer.VideoResolutionConstraint.max_resolution_pixels', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='required_protection', full_name='pywidevine_license_protocol.License.KeyContainer.VideoResolutionConstraint.required_protection', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2853,
  serialized_end=3039,
)

_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS = _descriptor.Descriptor(
  name='OperatorSessionKeyPermissions',
  full_name='pywidevine_license_protocol.License.KeyContainer.OperatorSessionKeyPermissions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='allow_encrypt', full_name='pywidevine_license_protocol.License.KeyContainer.OperatorSessionKeyPermissions.allow_encrypt', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='allow_decrypt', full_name='pywidevine_license_protocol.License.KeyContainer.OperatorSessionKeyPermissions.allow_decrypt', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='allow_sign', full_name='pywidevine_license_protocol.License.KeyContainer.OperatorSessionKeyPermissions.allow_sign', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='allow_signature_verify', full_name='pywidevine_license_protocol.License.KeyContainer.OperatorSessionKeyPermissions.allow_signature_verify', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3042,
  serialized_end=3199,
)

_LICENSE_KEYCONTAINER = _descriptor.Descriptor(
  name='KeyContainer',
  full_name='pywidevine_license_protocol.License.KeyContainer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='pywidevine_license_protocol.License.KeyContainer.id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='iv', full_name='pywidevine_license_protocol.License.KeyContainer.iv', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key', full_name='pywidevine_license_protocol.License.KeyContainer.key', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='pywidevine_license_protocol.License.KeyContainer.type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='level', full_name='pywidevine_license_protocol.License.KeyContainer.level', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='required_protection', full_name='pywidevine_license_protocol.License.KeyContainer.required_protection', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='requested_protection', full_name='pywidevine_license_protocol.License.KeyContainer.requested_protection', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key_control', full_name='pywidevine_license_protocol.License.KeyContainer.key_control', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='operator_session_key_permissions', full_name='pywidevine_license_protocol.License.KeyContainer.operator_session_key_permissions', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='video_resolution_constraints', full_name='pywidevine_license_protocol.License.KeyContainer.video_resolution_constraints', index=9,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='anti_rollback_usage_table', full_name='pywidevine_license_protocol.License.KeyContainer.anti_rollback_usage_table', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='track_label', full_name='pywidevine_license_protocol.License.KeyContainer.track_label', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LICENSE_KEYCONTAINER_KEYCONTROL, _LICENSE_KEYCONTAINER_OUTPUTPROTECTION, _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT, _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS, ],
  enum_types=[
    _LICENSE_KEYCONTAINER_KEYTYPE,
    _LICENSE_KEYCONTAINER_SECURITYLEVEL,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1325,
  serialized_end=3433,
)

_LICENSE = _descriptor.Descriptor(
  name='License',
  full_name='pywidevine_license_protocol.License',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='pywidevine_license_protocol.License.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='policy', full_name='pywidevine_license_protocol.License.policy', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key', full_name='pywidevine_license_protocol.License.key', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='license_start_time', full_name='pywidevine_license_protocol.License.license_start_time', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='remote_attestation_verified', full_name='pywidevine_license_protocol.License.remote_attestation_verified', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='provider_client_token', full_name='pywidevine_license_protocol.License.provider_client_token', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='protection_scheme', full_name='pywidevine_license_protocol.License.protection_scheme', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='srm_requirement', full_name='pywidevine_license_protocol.License.srm_requirement', index=7,
      number=8, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='srm_update', full_name='pywidevine_license_protocol.License.srm_update', index=8,
      number=9, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='platform_verification_status', full_name='pywidevine_license_protocol.License.platform_verification_status', index=9,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=4,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='group_ids', full_name='pywidevine_license_protocol.License.group_ids', index=10,
      number=11, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LICENSE_POLICY, _LICENSE_KEYCONTAINER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=248,
  serialized_end=3433,
)


_LICENSEREQUEST_CONTENTIDENTIFICATION_WIDEVINEPSSHDATA = _descriptor.Descriptor(
  name='WidevinePsshData',
  full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.WidevinePsshData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='pssh_data', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.WidevinePsshData.pssh_data', index=0,
      number=1, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='license_type', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.WidevinePsshData.license_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='request_id', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.WidevinePsshData.request_id', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4391,
  serialized_end=4512,
)

_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBMKEYID = _descriptor.Descriptor(
  name='WebmKeyId',
  full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.WebmKeyId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.WebmKeyId.header', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='license_type', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.WebmKeyId.license_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='request_id', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.WebmKeyId.request_id', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4514,
  serialized_end=4625,
)

_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE = _descriptor.Descriptor(
  name='ExistingLicense',
  full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.ExistingLicense',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='license_id', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.ExistingLicense.license_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='seconds_since_started', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.ExistingLicense.seconds_since_started', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='seconds_since_last_played', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.ExistingLicense.seconds_since_last_played', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='session_usage_table_entry', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.ExistingLicense.session_usage_table_entry', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4628,
  serialized_end=4818,
)

_LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA = _descriptor.Descriptor(
  name='InitData',
  full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.InitData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='init_data_type', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.InitData.init_data_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='init_data', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.InitData.init_data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='license_type', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.InitData.license_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='request_id', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.InitData.request_id', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA_INITDATATYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4821,
  serialized_end=5089,
)

_LICENSEREQUEST_CONTENTIDENTIFICATION = _descriptor.Descriptor(
  name='ContentIdentification',
  full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='widevine_pssh_data', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.widevine_pssh_data', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='webm_key_id', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.webm_key_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='existing_license', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.existing_license', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='init_data', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.init_data', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LICENSEREQUEST_CONTENTIDENTIFICATION_WIDEVINEPSSHDATA, _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBMKEYID, _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE, _LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='content_id_variant', full_name='pywidevine_license_protocol.LicenseRequest.ContentIdentification.content_id_variant',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=3944,
  serialized_end=5111,
)

_LICENSEREQUEST = _descriptor.Descriptor(
  name='LicenseRequest',
  full_name='pywidevine_license_protocol.LicenseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='client_id', full_name='pywidevine_license_protocol.LicenseRequest.client_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='content_id', full_name='pywidevine_license_protocol.LicenseRequest.content_id', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='pywidevine_license_protocol.LicenseRequest.type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='request_time', full_name='pywidevine_license_protocol.LicenseRequest.request_time', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key_control_nonce_deprecated', full_name='pywidevine_license_protocol.LicenseRequest.key_control_nonce_deprecated', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='protocol_version', full_name='pywidevine_license_protocol.LicenseRequest.protocol_version', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=20,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key_control_nonce', full_name='pywidevine_license_protocol.LicenseRequest.key_control_nonce', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='encrypted_client_id', full_name='pywidevine_license_protocol.LicenseRequest.encrypted_client_id', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LICENSEREQUEST_CONTENTIDENTIFICATION, ],
  enum_types=[
    _LICENSEREQUEST_REQUESTTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3436,
  serialized_end=5161,
)


_METRICDATA_TYPEVALUE = _descriptor.Descriptor(
  name='TypeValue',
  full_name='pywidevine_license_protocol.MetricData.TypeValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='pywidevine_license_protocol.MetricData.TypeValue.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='pywidevine_license_protocol.MetricData.TypeValue.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5270,
  serialized_end=5365,
)

_METRICDATA = _descriptor.Descriptor(
  name='MetricData',
  full_name='pywidevine_license_protocol.MetricData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='stage_name', full_name='pywidevine_license_protocol.MetricData.stage_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='metric_data', full_name='pywidevine_license_protocol.MetricData.metric_data', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_METRICDATA_TYPEVALUE, ],
  enum_types=[
    _METRICDATA_METRICTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5164,
  serialized_end=5407,
)


_VERSIONINFO = _descriptor.Descriptor(
  name='VersionInfo',
  full_name='pywidevine_license_protocol.VersionInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='license_sdk_version', full_name='pywidevine_license_protocol.VersionInfo.license_sdk_version', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='license_service_version', full_name='pywidevine_license_protocol.VersionInfo.license_service_version', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5409,
  serialized_end=5484,
)


_SIGNEDMESSAGE = _descriptor.Descriptor(
  name='SignedMessage',
  full_name='pywidevine_license_protocol.SignedMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='pywidevine_license_protocol.SignedMessage.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='msg', full_name='pywidevine_license_protocol.SignedMessage.msg', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signature', full_name='pywidevine_license_protocol.SignedMessage.signature', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='session_key', full_name='pywidevine_license_protocol.SignedMessage.session_key', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='remote_attestation', full_name='pywidevine_license_protocol.SignedMessage.remote_attestation', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='metric_data', full_name='pywidevine_license_protocol.SignedMessage.metric_data', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='service_version_info', full_name='pywidevine_license_protocol.SignedMessage.service_version_info', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='session_key_type', full_name='pywidevine_license_protocol.SignedMessage.session_key_type', index=7,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='oemcrypto_core_message', full_name='pywidevine_license_protocol.SignedMessage.oemcrypto_core_message', index=8,
      number=9, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SIGNEDMESSAGE_MESSAGETYPE,
    _SIGNEDMESSAGE_SESSIONKEYTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5487,
  serialized_end=6245,
)


_CLIENTIDENTIFICATION_NAMEVALUE = _descriptor.Descriptor(
  name='NameValue',
  full_name='pywidevine_license_protocol.ClientIdentification.NameValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='pywidevine_license_protocol.ClientIdentification.NameValue.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='pywidevine_license_protocol.ClientIdentification.NameValue.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6722,
  serialized_end=6762,
)

_CLIENTIDENTIFICATION_CLIENTCAPABILITIES = _descriptor.Descriptor(
  name='ClientCapabilities',
  full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='client_token', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.client_token', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='session_token', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.session_token', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='video_resolution_constraints', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.video_resolution_constraints', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_hdcp_version', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.max_hdcp_version', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='oem_crypto_api_version', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.oem_crypto_api_version', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='anti_rollback_usage_table', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.anti_rollback_usage_table', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='srm_version', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.srm_version', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='can_update_srm', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.can_update_srm', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='supported_certificate_key_type', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.supported_certificate_key_type', index=8,
      number=9, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='analog_output_capabilities', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.analog_output_capabilities', index=9,
      number=10, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='can_disable_analog_output', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.can_disable_analog_output', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='resource_rating_tier', full_name='pywidevine_license_protocol.ClientIdentification.ClientCapabilities.resource_rating_tier', index=11,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION,
    _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_CERTIFICATEKEYTYPE,
    _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_ANALOGOUTPUTCAPABILITIES,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6765,
  serialized_end=7875,
)

_CLIENTIDENTIFICATION_CLIENTCREDENTIALS = _descriptor.Descriptor(
  name='ClientCredentials',
  full_name='pywidevine_license_protocol.ClientIdentification.ClientCredentials',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='pywidevine_license_protocol.ClientIdentification.ClientCredentials.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='token', full_name='pywidevine_license_protocol.ClientIdentification.ClientCredentials.token', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7877,
  serialized_end=7994,
)

_CLIENTIDENTIFICATION = _descriptor.Descriptor(
  name='ClientIdentification',
  full_name='pywidevine_license_protocol.ClientIdentification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='pywidevine_license_protocol.ClientIdentification.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='token', full_name='pywidevine_license_protocol.ClientIdentification.token', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='client_info', full_name='pywidevine_license_protocol.ClientIdentification.client_info', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='provider_client_token', full_name='pywidevine_license_protocol.ClientIdentification.provider_client_token', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='license_counter', full_name='pywidevine_license_protocol.ClientIdentification.license_counter', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='client_capabilities', full_name='pywidevine_license_protocol.ClientIdentification.client_capabilities', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='vmp_data', full_name='pywidevine_license_protocol.ClientIdentification.vmp_data', index=6,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='device_credentials', full_name='pywidevine_license_protocol.ClientIdentification.device_credentials', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CLIENTIDENTIFICATION_NAMEVALUE, _CLIENTIDENTIFICATION_CLIENTCAPABILITIES, _CLIENTIDENTIFICATION_CLIENTCREDENTIALS, ],
  enum_types=[
    _CLIENTIDENTIFICATION_TOKENTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6248,
  serialized_end=8111,
)


_ENCRYPTEDCLIENTIDENTIFICATION = _descriptor.Descriptor(
  name='EncryptedClientIdentification',
  full_name='pywidevine_license_protocol.EncryptedClientIdentification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='provider_id', full_name='pywidevine_license_protocol.EncryptedClientIdentification.provider_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='service_certificate_serial_number', full_name='pywidevine_license_protocol.EncryptedClientIdentification.service_certificate_serial_number', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='encrypted_client_id', full_name='pywidevine_license_protocol.EncryptedClientIdentification.encrypted_client_id', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='encrypted_client_id_iv', full_name='pywidevine_license_protocol.EncryptedClientIdentification.encrypted_client_id_iv', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='encrypted_privacy_key', full_name='pywidevine_license_protocol.EncryptedClientIdentification.encrypted_privacy_key', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8114,
  serialized_end=8301,
)


_DRMCERTIFICATE_ENCRYPTIONKEY = _descriptor.Descriptor(
  name='EncryptionKey',
  full_name='pywidevine_license_protocol.DrmCertificate.EncryptionKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='public_key', full_name='pywidevine_license_protocol.DrmCertificate.EncryptionKey.public_key', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='algorithm', full_name='pywidevine_license_protocol.DrmCertificate.EncryptionKey.algorithm', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8827,
  serialized_end=8941,
)

_DRMCERTIFICATE = _descriptor.Descriptor(
  name='DrmCertificate',
  full_name='pywidevine_license_protocol.DrmCertificate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='pywidevine_license_protocol.DrmCertificate.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='serial_number', full_name='pywidevine_license_protocol.DrmCertificate.serial_number', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='creation_time_seconds', full_name='pywidevine_license_protocol.DrmCertificate.creation_time_seconds', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='expiration_time_seconds', full_name='pywidevine_license_protocol.DrmCertificate.expiration_time_seconds', index=3,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='public_key', full_name='pywidevine_license_protocol.DrmCertificate.public_key', index=4,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='system_id', full_name='pywidevine_license_protocol.DrmCertificate.system_id', index=5,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='test_device_deprecated', full_name='pywidevine_license_protocol.DrmCertificate.test_device_deprecated', index=6,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='provider_id', full_name='pywidevine_license_protocol.DrmCertificate.provider_id', index=7,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='service_types', full_name='pywidevine_license_protocol.DrmCertificate.service_types', index=8,
      number=8, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='algorithm', full_name='pywidevine_license_protocol.DrmCertificate.algorithm', index=9,
      number=9, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rot_id', full_name='pywidevine_license_protocol.DrmCertificate.rot_id', index=10,
      number=10, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='encryption_key', full_name='pywidevine_license_protocol.DrmCertificate.encryption_key', index=11,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_DRMCERTIFICATE_ENCRYPTIONKEY, ],
  enum_types=[
    _DRMCERTIFICATE_TYPE,
    _DRMCERTIFICATE_SERVICETYPE,
    _DRMCERTIFICATE_ALGORITHM,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8304,
  serialized_end=9258,
)


_SIGNEDDRMCERTIFICATE = _descriptor.Descriptor(
  name='SignedDrmCertificate',
  full_name='pywidevine_license_protocol.SignedDrmCertificate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='drm_certificate', full_name='pywidevine_license_protocol.SignedDrmCertificate.drm_certificate', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signature', full_name='pywidevine_license_protocol.SignedDrmCertificate.signature', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signer', full_name='pywidevine_license_protocol.SignedDrmCertificate.signer', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hash_algorithm', full_name='pywidevine_license_protocol.SignedDrmCertificate.hash_algorithm', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9261,
  serialized_end=9467,
)


_WIDEVINEPSSHDATA_ENTITLEDKEY = _descriptor.Descriptor(
  name='EntitledKey',
  full_name='pywidevine_license_protocol.WidevinePsshData.EntitledKey',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='entitlement_key_id', full_name='pywidevine_license_protocol.WidevinePsshData.EntitledKey.entitlement_key_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key_id', full_name='pywidevine_license_protocol.WidevinePsshData.EntitledKey.key_id', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key', full_name='pywidevine_license_protocol.WidevinePsshData.EntitledKey.key', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='iv', full_name='pywidevine_license_protocol.WidevinePsshData.EntitledKey.iv', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='entitlement_key_size_bytes', full_name='pywidevine_license_protocol.WidevinePsshData.EntitledKey.entitlement_key_size_bytes', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=32,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10009,
  serialized_end=10131,
)

_WIDEVINEPSSHDATA = _descriptor.Descriptor(
  name='WidevinePsshData',
  full_name='pywidevine_license_protocol.WidevinePsshData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key_ids', full_name='pywidevine_license_protocol.WidevinePsshData.key_ids', index=0,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='content_id', full_name='pywidevine_license_protocol.WidevinePsshData.content_id', index=1,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='crypto_period_index', full_name='pywidevine_license_protocol.WidevinePsshData.crypto_period_index', index=2,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='protection_scheme', full_name='pywidevine_license_protocol.WidevinePsshData.protection_scheme', index=3,
      number=9, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='crypto_period_seconds', full_name='pywidevine_license_protocol.WidevinePsshData.crypto_period_seconds', index=4,
      number=10, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='pywidevine_license_protocol.WidevinePsshData.type', index=5,
      number=11, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='key_sequence', full_name='pywidevine_license_protocol.WidevinePsshData.key_sequence', index=6,
      number=12, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='group_ids', full_name='pywidevine_license_protocol.WidevinePsshData.group_ids', index=7,
      number=13, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='entitled_keys', full_name='pywidevine_license_protocol.WidevinePsshData.entitled_keys', index=8,
      number=14, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='video_feature', full_name='pywidevine_license_protocol.WidevinePsshData.video_feature', index=9,
      number=15, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='algorithm', full_name='pywidevine_license_protocol.WidevinePsshData.algorithm', index=10,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='provider', full_name='pywidevine_license_protocol.WidevinePsshData.provider', index=11,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='track_type', full_name='pywidevine_license_protocol.WidevinePsshData.track_type', index=12,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='policy', full_name='pywidevine_license_protocol.WidevinePsshData.policy', index=13,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='grouped_license', full_name='pywidevine_license_protocol.WidevinePsshData.grouped_license', index=14,
      number=8, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\030\001', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_WIDEVINEPSSHDATA_ENTITLEDKEY, ],
  enum_types=[
    _WIDEVINEPSSHDATA_TYPE,
    _WIDEVINEPSSHDATA_ALGORITHM,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9470,
  serialized_end=10228,
)


_FILEHASHES_SIGNATURE = _descriptor.Descriptor(
  name='Signature',
  full_name='pywidevine_license_protocol.FileHashes.Signature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='pywidevine_license_protocol.FileHashes.Signature.filename', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='test_signing', full_name='pywidevine_license_protocol.FileHashes.Signature.test_signing', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='SHA512Hash', full_name='pywidevine_license_protocol.FileHashes.Signature.SHA512Hash', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='main_exe', full_name='pywidevine_license_protocol.FileHashes.Signature.main_exe', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signature', full_name='pywidevine_license_protocol.FileHashes.Signature.signature', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10332,
  serialized_end=10440,
)

_FILEHASHES = _descriptor.Descriptor(
  name='FileHashes',
  full_name='pywidevine_license_protocol.FileHashes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='signer', full_name='pywidevine_license_protocol.FileHashes.signer', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='signatures', full_name='pywidevine_license_protocol.FileHashes.signatures', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_FILEHASHES_SIGNATURE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10231,
  serialized_end=10440,
)

_LICENSEIDENTIFICATION.fields_by_name['type'].enum_type = _LICENSETYPE
_LICENSE_POLICY.containing_type = _LICENSE
_LICENSE_KEYCONTAINER_KEYCONTROL.containing_type = _LICENSE_KEYCONTAINER
_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['hdcp'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_HDCP
_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['cgms_flags'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS
_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.fields_by_name['hdcp_srm_rule'].enum_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION_HDCPSRMRULE
_LICENSE_KEYCONTAINER_OUTPUTPROTECTION.containing_type = _LICENSE_KEYCONTAINER
_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_HDCP.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION
_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_CGMS.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION
_LICENSE_KEYCONTAINER_OUTPUTPROTECTION_HDCPSRMRULE.containing_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION
_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.fields_by_name['required_protection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION
_LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT.containing_type = _LICENSE_KEYCONTAINER
_LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS.containing_type = _LICENSE_KEYCONTAINER
_LICENSE_KEYCONTAINER.fields_by_name['type'].enum_type = _LICENSE_KEYCONTAINER_KEYTYPE
_LICENSE_KEYCONTAINER.fields_by_name['level'].enum_type = _LICENSE_KEYCONTAINER_SECURITYLEVEL
_LICENSE_KEYCONTAINER.fields_by_name['required_protection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION
_LICENSE_KEYCONTAINER.fields_by_name['requested_protection'].message_type = _LICENSE_KEYCONTAINER_OUTPUTPROTECTION
_LICENSE_KEYCONTAINER.fields_by_name['key_control'].message_type = _LICENSE_KEYCONTAINER_KEYCONTROL
_LICENSE_KEYCONTAINER.fields_by_name['operator_session_key_permissions'].message_type = _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS
_LICENSE_KEYCONTAINER.fields_by_name['video_resolution_constraints'].message_type = _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT
_LICENSE_KEYCONTAINER.containing_type = _LICENSE
_LICENSE_KEYCONTAINER_KEYTYPE.containing_type = _LICENSE_KEYCONTAINER
_LICENSE_KEYCONTAINER_SECURITYLEVEL.containing_type = _LICENSE_KEYCONTAINER
_LICENSE.fields_by_name['id'].message_type = _LICENSEIDENTIFICATION
_LICENSE.fields_by_name['policy'].message_type = _LICENSE_POLICY
_LICENSE.fields_by_name['key'].message_type = _LICENSE_KEYCONTAINER
_LICENSE.fields_by_name['platform_verification_status'].enum_type = _PLATFORMVERIFICATIONSTATUS
_LICENSEREQUEST_CONTENTIDENTIFICATION_WIDEVINEPSSHDATA.fields_by_name['license_type'].enum_type = _LICENSETYPE
_LICENSEREQUEST_CONTENTIDENTIFICATION_WIDEVINEPSSHDATA.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION
_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBMKEYID.fields_by_name['license_type'].enum_type = _LICENSETYPE
_LICENSEREQUEST_CONTENTIDENTIFICATION_WEBMKEYID.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION
_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.fields_by_name['license_id'].message_type = _LICENSEIDENTIFICATION
_LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION
_LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA.fields_by_name['init_data_type'].enum_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA_INITDATATYPE
_LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA.fields_by_name['license_type'].enum_type = _LICENSETYPE
_LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION
_LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA_INITDATATYPE.containing_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA
_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['widevine_pssh_data'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WIDEVINEPSSHDATA
_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['webm_key_id'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBMKEYID
_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['existing_license'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE
_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['init_data'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA
_LICENSEREQUEST_CONTENTIDENTIFICATION.containing_type = _LICENSEREQUEST
_LICENSEREQUEST_CONTENTIDENTIFICATION.oneofs_by_name['content_id_variant'].fields.append(
  _LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['widevine_pssh_data'])
_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['widevine_pssh_data'].containing_oneof = _LICENSEREQUEST_CONTENTIDENTIFICATION.oneofs_by_name['content_id_variant']
_LICENSEREQUEST_CONTENTIDENTIFICATION.oneofs_by_name['content_id_variant'].fields.append(
  _LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['webm_key_id'])
_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['webm_key_id'].containing_oneof = _LICENSEREQUEST_CONTENTIDENTIFICATION.oneofs_by_name['content_id_variant']
_LICENSEREQUEST_CONTENTIDENTIFICATION.oneofs_by_name['content_id_variant'].fields.append(
  _LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['existing_license'])
_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['existing_license'].containing_oneof = _LICENSEREQUEST_CONTENTIDENTIFICATION.oneofs_by_name['content_id_variant']
_LICENSEREQUEST_CONTENTIDENTIFICATION.oneofs_by_name['content_id_variant'].fields.append(
  _LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['init_data'])
_LICENSEREQUEST_CONTENTIDENTIFICATION.fields_by_name['init_data'].containing_oneof = _LICENSEREQUEST_CONTENTIDENTIFICATION.oneofs_by_name['content_id_variant']
_LICENSEREQUEST.fields_by_name['client_id'].message_type = _CLIENTIDENTIFICATION
_LICENSEREQUEST.fields_by_name['content_id'].message_type = _LICENSEREQUEST_CONTENTIDENTIFICATION
_LICENSEREQUEST.fields_by_name['type'].enum_type = _LICENSEREQUEST_REQUESTTYPE
_LICENSEREQUEST.fields_by_name['protocol_version'].enum_type = _PROTOCOLVERSION
_LICENSEREQUEST.fields_by_name['encrypted_client_id'].message_type = _ENCRYPTEDCLIENTIDENTIFICATION
_LICENSEREQUEST_REQUESTTYPE.containing_type = _LICENSEREQUEST
_METRICDATA_TYPEVALUE.fields_by_name['type'].enum_type = _METRICDATA_METRICTYPE
_METRICDATA_TYPEVALUE.containing_type = _METRICDATA
_METRICDATA.fields_by_name['metric_data'].message_type = _METRICDATA_TYPEVALUE
_METRICDATA_METRICTYPE.containing_type = _METRICDATA
_SIGNEDMESSAGE.fields_by_name['type'].enum_type = _SIGNEDMESSAGE_MESSAGETYPE
_SIGNEDMESSAGE.fields_by_name['metric_data'].message_type = _METRICDATA
_SIGNEDMESSAGE.fields_by_name['service_version_info'].message_type = _VERSIONINFO
_SIGNEDMESSAGE.fields_by_name['session_key_type'].enum_type = _SIGNEDMESSAGE_SESSIONKEYTYPE
_SIGNEDMESSAGE_MESSAGETYPE.containing_type = _SIGNEDMESSAGE
_SIGNEDMESSAGE_SESSIONKEYTYPE.containing_type = _SIGNEDMESSAGE
_CLIENTIDENTIFICATION_NAMEVALUE.containing_type = _CLIENTIDENTIFICATION
_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.fields_by_name['max_hdcp_version'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION
_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.fields_by_name['supported_certificate_key_type'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_CERTIFICATEKEYTYPE
_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.fields_by_name['analog_output_capabilities'].enum_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES_ANALOGOUTPUTCAPABILITIES
_CLIENTIDENTIFICATION_CLIENTCAPABILITIES.containing_type = _CLIENTIDENTIFICATION
_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_HDCPVERSION.containing_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES
_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_CERTIFICATEKEYTYPE.containing_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES
_CLIENTIDENTIFICATION_CLIENTCAPABILITIES_ANALOGOUTPUTCAPABILITIES.containing_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES
_CLIENTIDENTIFICATION_CLIENTCREDENTIALS.fields_by_name['type'].enum_type = _CLIENTIDENTIFICATION_TOKENTYPE
_CLIENTIDENTIFICATION_CLIENTCREDENTIALS.containing_type = _CLIENTIDENTIFICATION
_CLIENTIDENTIFICATION.fields_by_name['type'].enum_type = _CLIENTIDENTIFICATION_TOKENTYPE
_CLIENTIDENTIFICATION.fields_by_name['client_info'].message_type = _CLIENTIDENTIFICATION_NAMEVALUE
_CLIENTIDENTIFICATION.fields_by_name['client_capabilities'].message_type = _CLIENTIDENTIFICATION_CLIENTCAPABILITIES
_CLIENTIDENTIFICATION.fields_by_name['device_credentials'].message_type = _CLIENTIDENTIFICATION_CLIENTCREDENTIALS
_CLIENTIDENTIFICATION_TOKENTYPE.containing_type = _CLIENTIDENTIFICATION
_DRMCERTIFICATE_ENCRYPTIONKEY.fields_by_name['algorithm'].enum_type = _DRMCERTIFICATE_ALGORITHM
_DRMCERTIFICATE_ENCRYPTIONKEY.containing_type = _DRMCERTIFICATE
_DRMCERTIFICATE.fields_by_name['type'].enum_type = _DRMCERTIFICATE_TYPE
_DRMCERTIFICATE.fields_by_name['service_types'].enum_type = _DRMCERTIFICATE_SERVICETYPE
_DRMCERTIFICATE.fields_by_name['algorithm'].enum_type = _DRMCERTIFICATE_ALGORITHM
_DRMCERTIFICATE.fields_by_name['encryption_key'].message_type = _DRMCERTIFICATE_ENCRYPTIONKEY
_DRMCERTIFICATE_TYPE.containing_type = _DRMCERTIFICATE
_DRMCERTIFICATE_SERVICETYPE.containing_type = _DRMCERTIFICATE
_DRMCERTIFICATE_ALGORITHM.containing_type = _DRMCERTIFICATE
_SIGNEDDRMCERTIFICATE.fields_by_name['signer'].message_type = _SIGNEDDRMCERTIFICATE
_SIGNEDDRMCERTIFICATE.fields_by_name['hash_algorithm'].enum_type = _HASHALGORITHMPROTO
_WIDEVINEPSSHDATA_ENTITLEDKEY.containing_type = _WIDEVINEPSSHDATA
_WIDEVINEPSSHDATA.fields_by_name['type'].enum_type = _WIDEVINEPSSHDATA_TYPE
_WIDEVINEPSSHDATA.fields_by_name['entitled_keys'].message_type = _WIDEVINEPSSHDATA_ENTITLEDKEY
_WIDEVINEPSSHDATA.fields_by_name['algorithm'].enum_type = _WIDEVINEPSSHDATA_ALGORITHM
_WIDEVINEPSSHDATA_TYPE.containing_type = _WIDEVINEPSSHDATA
_WIDEVINEPSSHDATA_ALGORITHM.containing_type = _WIDEVINEPSSHDATA
_FILEHASHES_SIGNATURE.containing_type = _FILEHASHES
_FILEHASHES.fields_by_name['signatures'].message_type = _FILEHASHES_SIGNATURE
DESCRIPTOR.message_types_by_name['LicenseIdentification'] = _LICENSEIDENTIFICATION
DESCRIPTOR.message_types_by_name['License'] = _LICENSE
DESCRIPTOR.message_types_by_name['LicenseRequest'] = _LICENSEREQUEST
DESCRIPTOR.message_types_by_name['MetricData'] = _METRICDATA
DESCRIPTOR.message_types_by_name['VersionInfo'] = _VERSIONINFO
DESCRIPTOR.message_types_by_name['SignedMessage'] = _SIGNEDMESSAGE
DESCRIPTOR.message_types_by_name['ClientIdentification'] = _CLIENTIDENTIFICATION
DESCRIPTOR.message_types_by_name['EncryptedClientIdentification'] = _ENCRYPTEDCLIENTIDENTIFICATION
DESCRIPTOR.message_types_by_name['DrmCertificate'] = _DRMCERTIFICATE
DESCRIPTOR.message_types_by_name['SignedDrmCertificate'] = _SIGNEDDRMCERTIFICATE
DESCRIPTOR.message_types_by_name['WidevinePsshData'] = _WIDEVINEPSSHDATA
DESCRIPTOR.message_types_by_name['FileHashes'] = _FILEHASHES
DESCRIPTOR.enum_types_by_name['LicenseType'] = _LICENSETYPE
DESCRIPTOR.enum_types_by_name['PlatformVerificationStatus'] = _PLATFORMVERIFICATIONSTATUS
DESCRIPTOR.enum_types_by_name['ProtocolVersion'] = _PROTOCOLVERSION
DESCRIPTOR.enum_types_by_name['HashAlgorithmProto'] = _HASHALGORITHMPROTO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LicenseIdentification = _reflection.GeneratedProtocolMessageType('LicenseIdentification', (_message.Message,), {
  'DESCRIPTOR' : _LICENSEIDENTIFICATION,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.LicenseIdentification)
  })
_sym_db.RegisterMessage(LicenseIdentification)

License = _reflection.GeneratedProtocolMessageType('License', (_message.Message,), {

  'Policy' : _reflection.GeneratedProtocolMessageType('Policy', (_message.Message,), {
    'DESCRIPTOR' : _LICENSE_POLICY,
    '__module__' : 'license_protocol_pb2'
    # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.License.Policy)
    })
  ,

  'KeyContainer' : _reflection.GeneratedProtocolMessageType('KeyContainer', (_message.Message,), {

    'KeyControl' : _reflection.GeneratedProtocolMessageType('KeyControl', (_message.Message,), {
      'DESCRIPTOR' : _LICENSE_KEYCONTAINER_KEYCONTROL,
      '__module__' : 'license_protocol_pb2'
      # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.License.KeyContainer.KeyControl)
      })
    ,

    'OutputProtection' : _reflection.GeneratedProtocolMessageType('OutputProtection', (_message.Message,), {
      'DESCRIPTOR' : _LICENSE_KEYCONTAINER_OUTPUTPROTECTION,
      '__module__' : 'license_protocol_pb2'
      # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.License.KeyContainer.OutputProtection)
      })
    ,

    'VideoResolutionConstraint' : _reflection.GeneratedProtocolMessageType('VideoResolutionConstraint', (_message.Message,), {
      'DESCRIPTOR' : _LICENSE_KEYCONTAINER_VIDEORESOLUTIONCONSTRAINT,
      '__module__' : 'license_protocol_pb2'
      # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.License.KeyContainer.VideoResolutionConstraint)
      })
    ,

    'OperatorSessionKeyPermissions' : _reflection.GeneratedProtocolMessageType('OperatorSessionKeyPermissions', (_message.Message,), {
      'DESCRIPTOR' : _LICENSE_KEYCONTAINER_OPERATORSESSIONKEYPERMISSIONS,
      '__module__' : 'license_protocol_pb2'
      # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.License.KeyContainer.OperatorSessionKeyPermissions)
      })
    ,
    'DESCRIPTOR' : _LICENSE_KEYCONTAINER,
    '__module__' : 'license_protocol_pb2'
    # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.License.KeyContainer)
    })
  ,
  'DESCRIPTOR' : _LICENSE,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.License)
  })
_sym_db.RegisterMessage(License)
_sym_db.RegisterMessage(License.Policy)
_sym_db.RegisterMessage(License.KeyContainer)
_sym_db.RegisterMessage(License.KeyContainer.KeyControl)
_sym_db.RegisterMessage(License.KeyContainer.OutputProtection)
_sym_db.RegisterMessage(License.KeyContainer.VideoResolutionConstraint)
_sym_db.RegisterMessage(License.KeyContainer.OperatorSessionKeyPermissions)

LicenseRequest = _reflection.GeneratedProtocolMessageType('LicenseRequest', (_message.Message,), {

  'ContentIdentification' : _reflection.GeneratedProtocolMessageType('ContentIdentification', (_message.Message,), {

    'WidevinePsshData' : _reflection.GeneratedProtocolMessageType('WidevinePsshData', (_message.Message,), {
      'DESCRIPTOR' : _LICENSEREQUEST_CONTENTIDENTIFICATION_WIDEVINEPSSHDATA,
      '__module__' : 'license_protocol_pb2'
      # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.LicenseRequest.ContentIdentification.WidevinePsshData)
      })
    ,

    'WebmKeyId' : _reflection.GeneratedProtocolMessageType('WebmKeyId', (_message.Message,), {
      'DESCRIPTOR' : _LICENSEREQUEST_CONTENTIDENTIFICATION_WEBMKEYID,
      '__module__' : 'license_protocol_pb2'
      # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.LicenseRequest.ContentIdentification.WebmKeyId)
      })
    ,

    'ExistingLicense' : _reflection.GeneratedProtocolMessageType('ExistingLicense', (_message.Message,), {
      'DESCRIPTOR' : _LICENSEREQUEST_CONTENTIDENTIFICATION_EXISTINGLICENSE,
      '__module__' : 'license_protocol_pb2'
      # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.LicenseRequest.ContentIdentification.ExistingLicense)
      })
    ,

    'InitData' : _reflection.GeneratedProtocolMessageType('InitData', (_message.Message,), {
      'DESCRIPTOR' : _LICENSEREQUEST_CONTENTIDENTIFICATION_INITDATA,
      '__module__' : 'license_protocol_pb2'
      # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.LicenseRequest.ContentIdentification.InitData)
      })
    ,
    'DESCRIPTOR' : _LICENSEREQUEST_CONTENTIDENTIFICATION,
    '__module__' : 'license_protocol_pb2'
    # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.LicenseRequest.ContentIdentification)
    })
  ,
  'DESCRIPTOR' : _LICENSEREQUEST,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.LicenseRequest)
  })
_sym_db.RegisterMessage(LicenseRequest)
_sym_db.RegisterMessage(LicenseRequest.ContentIdentification)
_sym_db.RegisterMessage(LicenseRequest.ContentIdentification.WidevinePsshData)
_sym_db.RegisterMessage(LicenseRequest.ContentIdentification.WebmKeyId)
_sym_db.RegisterMessage(LicenseRequest.ContentIdentification.ExistingLicense)
_sym_db.RegisterMessage(LicenseRequest.ContentIdentification.InitData)

MetricData = _reflection.GeneratedProtocolMessageType('MetricData', (_message.Message,), {

  'TypeValue' : _reflection.GeneratedProtocolMessageType('TypeValue', (_message.Message,), {
    'DESCRIPTOR' : _METRICDATA_TYPEVALUE,
    '__module__' : 'license_protocol_pb2'
    # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.MetricData.TypeValue)
    })
  ,
  'DESCRIPTOR' : _METRICDATA,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.MetricData)
  })
_sym_db.RegisterMessage(MetricData)
_sym_db.RegisterMessage(MetricData.TypeValue)

VersionInfo = _reflection.GeneratedProtocolMessageType('VersionInfo', (_message.Message,), {
  'DESCRIPTOR' : _VERSIONINFO,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.VersionInfo)
  })
_sym_db.RegisterMessage(VersionInfo)

SignedMessage = _reflection.GeneratedProtocolMessageType('SignedMessage', (_message.Message,), {
  'DESCRIPTOR' : _SIGNEDMESSAGE,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.SignedMessage)
  })
_sym_db.RegisterMessage(SignedMessage)

ClientIdentification = _reflection.GeneratedProtocolMessageType('ClientIdentification', (_message.Message,), {

  'NameValue' : _reflection.GeneratedProtocolMessageType('NameValue', (_message.Message,), {
    'DESCRIPTOR' : _CLIENTIDENTIFICATION_NAMEVALUE,
    '__module__' : 'license_protocol_pb2'
    # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.ClientIdentification.NameValue)
    })
  ,

  'ClientCapabilities' : _reflection.GeneratedProtocolMessageType('ClientCapabilities', (_message.Message,), {
    'DESCRIPTOR' : _CLIENTIDENTIFICATION_CLIENTCAPABILITIES,
    '__module__' : 'license_protocol_pb2'
    # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.ClientIdentification.ClientCapabilities)
    })
  ,

  'ClientCredentials' : _reflection.GeneratedProtocolMessageType('ClientCredentials', (_message.Message,), {
    'DESCRIPTOR' : _CLIENTIDENTIFICATION_CLIENTCREDENTIALS,
    '__module__' : 'license_protocol_pb2'
    # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.ClientIdentification.ClientCredentials)
    })
  ,
  'DESCRIPTOR' : _CLIENTIDENTIFICATION,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.ClientIdentification)
  })
_sym_db.RegisterMessage(ClientIdentification)
_sym_db.RegisterMessage(ClientIdentification.NameValue)
_sym_db.RegisterMessage(ClientIdentification.ClientCapabilities)
_sym_db.RegisterMessage(ClientIdentification.ClientCredentials)

EncryptedClientIdentification = _reflection.GeneratedProtocolMessageType('EncryptedClientIdentification', (_message.Message,), {
  'DESCRIPTOR' : _ENCRYPTEDCLIENTIDENTIFICATION,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.EncryptedClientIdentification)
  })
_sym_db.RegisterMessage(EncryptedClientIdentification)

DrmCertificate = _reflection.GeneratedProtocolMessageType('DrmCertificate', (_message.Message,), {

  'EncryptionKey' : _reflection.GeneratedProtocolMessageType('EncryptionKey', (_message.Message,), {
    'DESCRIPTOR' : _DRMCERTIFICATE_ENCRYPTIONKEY,
    '__module__' : 'license_protocol_pb2'
    # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.DrmCertificate.EncryptionKey)
    })
  ,
  'DESCRIPTOR' : _DRMCERTIFICATE,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.DrmCertificate)
  })
_sym_db.RegisterMessage(DrmCertificate)
_sym_db.RegisterMessage(DrmCertificate.EncryptionKey)

SignedDrmCertificate = _reflection.GeneratedProtocolMessageType('SignedDrmCertificate', (_message.Message,), {
  'DESCRIPTOR' : _SIGNEDDRMCERTIFICATE,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.SignedDrmCertificate)
  })
_sym_db.RegisterMessage(SignedDrmCertificate)

WidevinePsshData = _reflection.GeneratedProtocolMessageType('WidevinePsshData', (_message.Message,), {

  'EntitledKey' : _reflection.GeneratedProtocolMessageType('EntitledKey', (_message.Message,), {
    'DESCRIPTOR' : _WIDEVINEPSSHDATA_ENTITLEDKEY,
    '__module__' : 'license_protocol_pb2'
    # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.WidevinePsshData.EntitledKey)
    })
  ,
  'DESCRIPTOR' : _WIDEVINEPSSHDATA,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.WidevinePsshData)
  })
_sym_db.RegisterMessage(WidevinePsshData)
_sym_db.RegisterMessage(WidevinePsshData.EntitledKey)

FileHashes = _reflection.GeneratedProtocolMessageType('FileHashes', (_message.Message,), {

  'Signature' : _reflection.GeneratedProtocolMessageType('Signature', (_message.Message,), {
    'DESCRIPTOR' : _FILEHASHES_SIGNATURE,
    '__module__' : 'license_protocol_pb2'
    # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.FileHashes.Signature)
    })
  ,
  'DESCRIPTOR' : _FILEHASHES,
  '__module__' : 'license_protocol_pb2'
  # @@protoc_insertion_point(class_scope:pywidevine_license_protocol.FileHashes)
  })
_sym_db.RegisterMessage(FileHashes)
_sym_db.RegisterMessage(FileHashes.Signature)


DESCRIPTOR._options = None
_DRMCERTIFICATE.fields_by_name['test_device_deprecated']._options = None
_WIDEVINEPSSHDATA.fields_by_name['algorithm']._options = None
_WIDEVINEPSSHDATA.fields_by_name['provider']._options = None
_WIDEVINEPSSHDATA.fields_by_name['track_type']._options = None
_WIDEVINEPSSHDATA.fields_by_name['policy']._options = None
_WIDEVINEPSSHDATA.fields_by_name['grouped_license']._options = None
# @@protoc_insertion_point(module_scope)
